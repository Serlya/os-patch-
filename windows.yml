---
- hosts: all
  become: true
  become: root
  become_method: sudo
  serial: 1


  tasks:

    # purpose of this task to check if application is running or stopped
    #- name:  verify application/database processes are not running
      #shell: if ps -eaf | egrep 'apache|http'|grep -v grep > /dev/null ;then echo 'process_running';else echo 'process_not_running';fi
      #ignore_errors: true
     # register: app_process_check

    # this task is decision,play will fail/quit,if application is running
    #- name:  decision point to start patching
      #fail: msg="{{ inventory_hostname }} have running Application.Please stop the application first, then attempt patching."
      #when: app_process_check.stdout == "process_running"

    # updating windows
    - name: update all packages
      win_updates: state=searched
      #ansible_distribution == 'Microsoft Windows 10 Pro'
      register: update_count

    # this task is to check if windows update happend and system needs reboot or not
    #- name: check if reboot required after win updates.
      #shell: KERNEL_NEW=$(rpm -q --last kernel |head -1 | awk '{print $1}' | sed 's/kernel-//'); KERNEL_NOW=$(uname -r); if [[ $KERNEL_NEW != $KERNEL_NOW ]]; then echo "reboot_needed"; else echo "reboot_not_needed"; fi
      #ignore_errors: true
      #register: reboot_required

    # this task is to restart the system
    #- name: restart system
      #command: shutdown "Rebooting System After Patching"
      #when: update_result.reboot_required
      #register: reboot_started
      #ignore_errors: true

    - name: Reboot, if needed
      win_reboot:
      when: update_result.reboot_required
      when: update_count.found_update_count|int >= 1


    # this task is to wait for 3 minutues for system to come up after the reboot
    - name: pause for 180 secs
      pause:
        minutes: 3

    # this task is to confirm,system is up and responding to ssh
    #- name: check if system responding to ssh
      #local_action:
        #module: wait_for
          #host={{ inventory_hostname }}
          #port=22
          #delay=15
          #timeout=300
          #state=started
      #when: reboot_required
